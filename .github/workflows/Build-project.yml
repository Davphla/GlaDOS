# This is a basic workflow to help you get started with Actions

name: CI build GlaDOS project

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-project:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      
      - name: add haskel part
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '8.8.4'
          enable-stack: true
          stack-version: 'latest'
      
      # Run command for building project
      - name: Compile project GlaDOS
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: glados-exes
          path: glados
      - name: tree function
        run: tree

  test:
    # The type of runner that the job will run on
    needs: build-project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Runs test with stack
      - name: Run test haskell with stack
        run: stack test --coverage

      #Run test functcionel for GlaDOS
      - name: Run functcionel test
        run: make func_tests

      - name: Upload test coverage in artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-folder
          path: .stack-work/install/x86_64-linux-tinfo6/*

  release:
    needs: test
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: glados-exes

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.RELEASE }}
        with:
          tag_name: V${{ github.run_number }}
          release_name: GlaDOS Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Custom release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./glados
          asset_name: glados-exe.tar.gz
          asset_content_type: application/tar.gz
      
      - name: test coverage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.stack-work/install/x86_64-linux-tinfo6/affb732a1df2f664495cea45ecb2a0ec6436312d5a18525de491e4a4c00d0a4f/9.2.5/hpc/index.html
          asset_name: coverge.html
          asset_content_type: application/.html
